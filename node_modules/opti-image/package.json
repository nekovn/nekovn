{
  "_from": "opti-image",
  "_id": "opti-image@0.10.0",
  "_inBundle": false,
  "_integrity": "sha512-g0LnoYipn5YcABP3XPR0twcVLJ2uhdWqWzzFO77RWK+lqK2CakYQAI1dLnWYoSrN/UMww5CJ7NIbi93TnqXpTQ==",
  "_location": "/opti-image",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "opti-image",
    "name": "opti-image",
    "escapedName": "opti-image",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/opti-image/-/opti-image-0.10.0.tgz",
  "_shasum": "a795f67bf6d7afe3e020de6991467fe8d2c3b132",
  "_spec": "opti-image",
  "_where": "D:\\projects\\NekoVn",
  "bundleDependencies": false,
  "dependencies": {
    "core-js": "^2.6.5",
    "vue": "^2.6.10",
    "vue-runtime-helpers": "^1.0.1"
  },
  "deprecated": false,
  "description": "A Vue.js component for handling performant images without the headache. * Webp's with fallbacks for unsupported browsers (even in srcset) * Lazy loading out of the box (uses Intersection Observer) * Set standard srcset once in plugin options and it automatically applies to all opti-image components * Space reserved according to aspect ratio to prevent page jumping upon image load * Renders just a plain old img tag, no wrappers, for a drop in replacement for your current img's * Built in support for [placeholder.com](https://placeholder.com/?ref=opti-image) for handy placeholder images during development * Works with Nuxt.js (SSR)",
  "devDependencies": {
    "@vue/cli-plugin-babel": "^3.8.0",
    "@vue/cli-plugin-eslint": "^3.8.0",
    "@vue/cli-plugin-unit-jest": "^3.8.0",
    "@vue/cli-service": "^3.8.0",
    "@vue/eslint-config-prettier": "^4.0.1",
    "@vue/server-test-utils": "^1.0.0-beta.29",
    "@vue/test-utils": "1.0.0-beta.29",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "bili": "^4.8.0",
    "eslint": "^5.16.0",
    "eslint-plugin-vue": "^5.0.0",
    "flush-promises": "^1.0.2",
    "node-sass": "^4.9.0",
    "rollup-plugin-vue": "^5.0.1",
    "sass-loader": "^7.1.0",
    "vue-template-compiler": "^2.6.10"
  },
  "files": [
    "dist/*"
  ],
  "homepage": "https://github.com/danielkellyio/opti-image",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json",
      "vue"
    ],
    "transform": {
      "^.+\\.vue$": "vue-jest",
      ".+\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$": "jest-transform-stub",
      "^.+\\.jsx?$": "babel-jest"
    },
    "transformIgnorePatterns": [
      "/node_modules/"
    ],
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "snapshotSerializers": [
      "jest-serializer-vue"
    ],
    "testMatch": [
      "**/tests/unit/**/*.test.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)"
    ],
    "testURL": "http://localhost/",
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ]
  },
  "keywords": [
    "vuejs",
    "vue",
    "image optization",
    "image lazy load",
    "image webp",
    "vue images",
    "vuejs images",
    "performant images vuejs"
  ],
  "license": "MIT",
  "main": "./dist/index.js",
  "name": "opti-image",
  "scripts": {
    "build": "bili --no-babelrc && npm run build:unpkg",
    "build:unpkg": "bili --format iife",
    "lint": "vue-cli-service lint",
    "serve": "vue-cli-service serve",
    "test:unit": "vue-cli-service test:unit"
  },
  "unpkg": "./dist/index.iife.js",
  "version": "0.10.0"
}
